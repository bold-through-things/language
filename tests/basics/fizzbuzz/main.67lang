local fizz_divisor
	string ""
local buzz_divisor
	string ""
local n
	string ""

if
	do is_tty
then
	do prompt into fizz_divisor
		string "fizz? "
	do prompt into buzz_divisor
		string "buzz? "
	do prompt into n
		string "n? "
else
	local input
		do stdin
	
	local input
		do split the input
			string "\n"
	
	# TODO: instead we should be able to just specify a mapping and unroll this automatically i.e. {0: fizz_divisor, ...}

	do # into fizz_divisor
		get input
		int 0

	do # into buzz_divisor
		get input
		int 1

	do n
		local _generics_please_i_beg_you_help
			type str
			do #
				get input
				int 2

local i
	int 0
while
	do nondesc
		get i
		get n
do
	local out
		string ""
	
	if
		do eq
			do mod
				get i
				get fizz_divisor
			int 0
	then
		do concat into out
			get out
			string "fizz"

	if
		do eq
			do mod
				get i
				get buzz_divisor
			int 0
	then
		do concat into out
			get out
			string "buzz"
	
	if
		do eq
			get out
			string ""
	then
		do concat into out
			note TODO why is this needed
			string ""
			get i

	do print
		get out
	
	do i
		local _fix_the_fucking_add_return_type
			type int
			do add
				get i
				int 1
