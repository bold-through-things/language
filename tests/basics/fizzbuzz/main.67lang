local fizz_divisor
	int 0
local buzz_divisor
	int 0
local n
	int 0

note TODO add prompting tests...
	if
		do is_tty
	then
		do prompt into fizz_divisor
			string "fizz? "
		do prompt into buzz_divisor
			string "buzz? "
		do prompt into n
			string "n? "
	else
do
	local input
		do stdin
	
	local input
		do split the input
			string "\n"
	
	# TODO: instead we should be able to just specify a mapping and unroll this automatically i.e. {0: fizz_divisor, ...}

	do #
		get input
		int 0
	then do parseInt into fizz_divisor

	do #
		get input
		int 1
	then do parseInt into buzz_divisor

	do #
		get input
		int 2
	then do parseInt into n

local i
	int 0
while
	do nondesc
		get i
		get n
do
	local out
		string ""
	
	if
		do eq
			do mod
				get i
				get fizz_divisor
			int 0
	then
		do concat into out
			get out
			string "fizz"

	if
		do eq
			do mod
				get i
				get buzz_divisor
			int 0
	then
		do concat into out
			get out
			string "buzz"
	
	if
		do eq
			get out
			string ""
	then
		do concat into out
			note TODO why is this needed
			string ""
			do toString the i

	do print
		get out
	
	do i
		local _fix_the_fucking_add_return_type
			type int
			do add
				get i
				int 1
