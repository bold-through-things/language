local fizz_divisor
local buzz_divisor
local n

if
	a is_tty
then
	access fizz_divisor
		a prompt
			string "fizz? "
	access buzz_divisor
		a prompt
			string "buzz? "
	access n
		a prompt
			string "n? "
else
	local input
		type str
		a stdin
	
	access input
		access input split
			string "\n"
	
	# TODO: instead we should be able to just specify a mapping and unroll this automatically i.e. {0: fizz_divisor, ...}

	a fizz_divisor
		an input key
			where key is
				int 0

	a buzz_divisor
		an input key
			where key is
				int 1

	an n
		an input key
			where key is
				int 2

local i
	int 0
while
	a nondesc
		access i
		access n
do
	local out
		string ""
	
	if
		a eq
			a mod
				access i
				access fizz_divisor
			int 0
	then
		access out
			a concat
				access out
				string "fizz"

	if
		a eq
			a mod
				access i
				access buzz_divisor
			int 0
	then
		access out
			a concat
				access out
				string "buzz"
	
	if
		a eq
			access out
			string ""
	then
		access out
			access i

	a print
		access out
	
	access i
		a add
			access i
			int 1