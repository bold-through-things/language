67lang:file
	local fizz_divisor

	local buzz_divisor

	local n

	if
		local _0x3_is_tty
			67lang:call is_tty

			67lang:auto_type

		then
			local _0x5_fizz_divisor
				67lang:call fizz_divisor
					local _0x6_prompt
						67lang:call prompt
							string "fizz? "

						67lang:auto_type

				67lang:auto_type

			local _0xa_buzz_divisor
				67lang:call buzz_divisor
					local _0xb_prompt
						67lang:call prompt
							string "buzz? "

						67lang:auto_type

				67lang:auto_type

			local _0xf_n
				67lang:call n
					local _0x10_prompt
						67lang:call prompt
							string "n? "

						67lang:auto_type

				67lang:auto_type

	else
		local input
			local _0x14_stdin
				67lang:call stdin

				67lang:auto_type

		local _0x17_input
			67lang:call input
				noscope
					local _0x18_input
						67lang:call input

						67lang:auto_type

				local _0x19_split
					67lang:call split
						67lang:call _0x18_input

						string "\n"

					67lang:auto_type

			67lang:auto_type

		# TODO: instead we should be able to just specify a mapping and unroll this automatically i.e. {0: fizz_divisor, ...}

		local _0x1f_fizz_divisor
			67lang:call fizz_divisor
				noscope
					local _0x20_input
						67lang:call input

						67lang:auto_type

				local _0x21__hash_
					67lang:call #
						67lang:call _0x20_input

						int 0

					67lang:auto_type

			67lang:auto_type

		local _0x27_buzz_divisor
			67lang:call buzz_divisor
				noscope
					local _0x28_input
						67lang:call input

						67lang:auto_type

				local _0x29__hash_
					67lang:call #
						67lang:call _0x28_input

						int 1

					67lang:auto_type

			67lang:auto_type

		local _0x2f_n
			67lang:call n
				noscope
					local _0x30_input
						67lang:call input

						67lang:auto_type

				local _0x31__hash_
					67lang:call #
						67lang:call _0x30_input

						int 2

					67lang:auto_type

			67lang:auto_type

	local i
		int 0

	while
		local _0x38_nondesc
			67lang:call nondesc
				local _0x39_i
					67lang:call i

					67lang:auto_type

				local _0x3b_n
					67lang:call n

					67lang:auto_type

			67lang:auto_type

		do
			local out
				string ""

			if
				local _0x41_eq
					67lang:call eq
						local _0x42_mod
							67lang:call mod
								local _0x43_i
									67lang:call i

									67lang:auto_type

								local _0x45_fizz_divisor
									67lang:call fizz_divisor

									67lang:auto_type

							67lang:auto_type

						int 0

					67lang:auto_type

				then
					local _0x4e_out
						67lang:call out
							local _0x4f_concat
								67lang:call concat
									local _0x50_out
										67lang:call out

										67lang:auto_type

									string "fizz"

								67lang:auto_type

						67lang:auto_type

			if
				local _0x57_eq
					67lang:call eq
						local _0x58_mod
							67lang:call mod
								local _0x59_i
									67lang:call i

									67lang:auto_type

								local _0x5b_buzz_divisor
									67lang:call buzz_divisor

									67lang:auto_type

							67lang:auto_type

						int 0

					67lang:auto_type

				then
					local _0x64_out
						67lang:call out
							local _0x65_concat
								67lang:call concat
									local _0x66_out
										67lang:call out

										67lang:auto_type

									string "buzz"

								67lang:auto_type

						67lang:auto_type

			if
				local _0x6d_eq
					67lang:call eq
						local _0x6e_out
							67lang:call out

							67lang:auto_type

						string ""

					67lang:auto_type

				then
					local _0x72_out
						67lang:call out
							local _0x73_i
								67lang:call i

								67lang:auto_type

						67lang:auto_type

			local _0x77_print
				67lang:call print
					local _0x78_out
						67lang:call out

						67lang:auto_type

				67lang:auto_type

			local _0x7c_i
				67lang:call i
					local _0x7d_add
						67lang:call add
							local _0x7e_i
								67lang:call i

								67lang:auto_type

							int 1

						67lang:auto_type

				67lang:auto_type


