67lang:file
	local fizz_divisor

	local buzz_divisor

	local n

	if
		local _0x3_is_tty
			67lang:call is_tty

			67lang:auto_type

		then
			local _0x5_fizz_divisor
				67lang:access_local fizz_divisor
					local _0x4_prompt
						67lang:call prompt
							string "fizz? "

						67lang:auto_type

				67lang:auto_type

			local _0x8_buzz_divisor
				67lang:access_local buzz_divisor
					local _0x7_prompt
						67lang:call prompt
							string "buzz? "

						67lang:auto_type

				67lang:auto_type

			local _0xb_n
				67lang:access_local n
					local _0xa_prompt
						67lang:call prompt
							string "n? "

						67lang:auto_type

				67lang:auto_type

	else
		local input
			type str

			local _0xd_stdin
				67lang:call stdin

				67lang:auto_type

		local _0x11_input
			67lang:call input
				noscope
					local _0xf_input
						67lang:call input

						67lang:auto_type

				local _0x10_split
					67lang:call split
						67lang:access_local _0xf_input

						string "\n"

					67lang:auto_type

			67lang:auto_type

		# TODO: instead we should be able to just specify a mapping and unroll this automatically i.e. {0: fizz_divisor, ...}

		local _0x16_fizz_divisor
			67lang:access_local fizz_divisor
				noscope
					local _0x14_input
						67lang:call input

						67lang:auto_type

				local _0x15_key
					67lang:access_index _0x14_input
						int 0

			67lang:auto_type

		local _0x1b_buzz_divisor
			67lang:access_local buzz_divisor
				noscope
					local _0x19_input
						67lang:call input

						67lang:auto_type

				local _0x1a_key
					67lang:access_index _0x19_input
						int 1

			67lang:auto_type

		local _0x20_n
			67lang:access_local n
				noscope
					local _0x1e_input
						67lang:call input

						67lang:auto_type

				local _0x1f_key
					67lang:access_index _0x1e_input
						int 2

			67lang:auto_type

	local i
		int 0

	while
		local _0x26_nondesc
			67lang:call nondesc
				local _0x24_i
					67lang:access_local i

					67lang:auto_type

				local _0x25_n
					67lang:access_local n

					67lang:auto_type

			67lang:auto_type

		do
			local out
				string ""

			if
				local _0x2f_eq
					67lang:call eq
						local _0x2c_mod
							67lang:call mod
								local _0x2a_i
									67lang:access_local i

									67lang:auto_type

								local _0x2b_fizz_divisor
									67lang:access_local fizz_divisor

									67lang:auto_type

							67lang:auto_type

						int 0

					67lang:auto_type

				then
					local _0x36_out
						67lang:access_local out
							local _0x34_concat
								67lang:call concat
									local _0x33_out
										67lang:access_local out

										67lang:auto_type

									string "fizz"

								67lang:auto_type

						67lang:auto_type

			if
				local _0x3e_eq
					67lang:call eq
						local _0x3b_mod
							67lang:call mod
								local _0x39_i
									67lang:access_local i

									67lang:auto_type

								local _0x3a_buzz_divisor
									67lang:access_local buzz_divisor

									67lang:auto_type

							67lang:auto_type

						int 0

					67lang:auto_type

				then
					local _0x45_out
						67lang:access_local out
							local _0x43_concat
								67lang:call concat
									local _0x42_out
										67lang:access_local out

										67lang:auto_type

									string "buzz"

								67lang:auto_type

						67lang:auto_type

			if
				local _0x49_eq
					67lang:call eq
						local _0x48_out
							67lang:access_local out

							67lang:auto_type

						string ""

					67lang:auto_type

				then
					local _0x4c_out
						67lang:access_local out
							local _0x4b_i
								67lang:access_local i

								67lang:auto_type

						67lang:auto_type

			local _0x4f_print
				67lang:call print
					local _0x4e_out
						67lang:access_local out

						67lang:auto_type

				67lang:auto_type

			local _0x54_i
				67lang:access_local i
					local _0x52_add
						67lang:call add
							local _0x51_i
								67lang:access_local i

								67lang:auto_type

							int 1

						67lang:auto_type

				67lang:auto_type


