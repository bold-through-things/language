67lang:file
	note the task given
		Read a newline-separated list of strings (simulate lines of a CSV file).

		Assume the first line is a comma-separated list of headers.

		Parse each subsequent line into a “row object” (i.e. a map from header → value).

		Store all rows in a list, and then:

		Print each row’s "name" field (or whatever is in column 0, if you don’t want to special-case).

		Count how many rows have "age" > 30, assuming one of the columns is age.

	local lines
		stdin

		# okay i am seeing a reason to stop treating builtins as special, or at the very least to expose them in the scope object

	local _0x3_lines
		67lang:access_local lines
			noscope
				local _0x1_lines
					67lang:access_local lines

					67lang:auto_type

			local _0x2_split
				67lang:call split
					67lang:access_local _0x1_lines

					string "\n"

				67lang:auto_type

		67lang:auto_type

	local i
		int 0

	local header
		list

	local rows
		list

	for line in
		67lang:assume_local_exists line

		local _0x9_lines
			67lang:access_local lines

			67lang:auto_type

		do
			if
				eq
					local _0xb_i
						67lang:access_local i

						67lang:auto_type

					int 0

				then
					local _0xe_header
						67lang:access_local header
							noscope
								local _0xc_line
									67lang:access_local line

									67lang:auto_type

							local _0xd_split
								67lang:call split
									67lang:access_local _0xc_line

									string ","

								67lang:auto_type

						67lang:auto_type

			else
				local zip
					zip
						local _0x11_header
							67lang:access_local header

							67lang:auto_type

						noscope
							local _0x12_line
								67lang:access_local line

								67lang:auto_type

						local _0x13_split
							67lang:call split
								67lang:access_local _0x12_line

								string ","

							67lang:auto_type

				local row
					dict

				for kv in
					67lang:assume_local_exists kv

					local _0x16_zip
						67lang:access_local zip

						67lang:auto_type

					do
						noscope
							local _0x1c_row
								67lang:access_local row

								67lang:auto_type

						local _0x1d_key
							67lang:access_index _0x1c_row
								noscope
									local _0x18_kv
										67lang:access_local kv

										67lang:auto_type

								local _0x19__0
									67lang:access_field _0x18_kv 0

									67lang:auto_type

								noscope
									local _0x1a_kv
										67lang:access_local kv

										67lang:auto_type

								local _0x1b__1
									67lang:access_field _0x1a_kv 1

									67lang:auto_type

				noscope
					local _0x23_rows
						67lang:access_local rows

						67lang:auto_type

				local _0x24_push
					67lang:call push
						67lang:access_local _0x23_rows

						local _0x22_row
							67lang:access_local row

							67lang:auto_type

					67lang:auto_type

			local _0x27_i
				67lang:access_local i
					add
						local _0x26_i
							67lang:access_local i

							67lang:auto_type

						int 1

				67lang:auto_type

	for row in
		local _0x2a_i
			67lang:access_local i

			67lang:auto_type

		local _0x29_rows
			67lang:access_local rows

			67lang:auto_type

		do
			print
				noscope
					local _0x2c_row
						67lang:access_local row

						67lang:auto_type

				local _0x2d_name
					67lang:access_field _0x2c_row name

					67lang:auto_type

	local age_over_30
		int 0

	for row in
		67lang:assume_local_exists row

		local _0x2f_rows
			67lang:access_local rows

			67lang:auto_type

		do
			if
				asc
					noscope
						local _0x31_row
							67lang:access_local row

							67lang:auto_type

					local _0x32_age
						67lang:access_field _0x31_row age

						67lang:auto_type

					int 30

				then
					local _0x34_age_over_30
						67lang:access_local age_over_30
							add
								local _0x33_age_over_30
									67lang:access_local age_over_30

									67lang:auto_type

								int 1

						67lang:auto_type

	print
		local _0x36_age_over_30
			67lang:access_local age_over_30

			67lang:auto_type


