/path

--- Testing TextEncoder/TextDecoder ---
Text: " ASCII text " -> Bytes: [ Uint8Array(10) [
  65,  83,  67,  73,  73,
  32, 116, 101, 120, 116
] ] -> Restored: " ASCII text
Text: " Unicode: ðŸ¦• Deno " -> Bytes: [ Uint8Array(18) [
   85, 110, 105,  99, 111, 100,
  101,  58,  32, 240, 159, 166,
  149,  32,  68, 101, 110, 111
] ] -> Restored: " Unicode: ðŸ¦• Deno
Text: " Numbers: 42 " -> Bytes: [ Uint8Array(11) [
   78, 117, 109, 98, 101,
  114, 115,  58, 32,  52,
   50
] ] -> Restored: " Numbers: 42

--- Testing atob/btoa ---
Original:  Hello World  -> Encoded:  SGVsbG8gV29ybGQ=  -> Decoded:  Hello World

--- Testing JSON.stringify/parse ---
Original object -> JSON:  {"name":"Claude","type":"AI","version":42}
Parsed back -> name:  Claude

--- Testing fetch (data URL) ---
Response {
  body: ReadableStream { locked: true },
  bodyUsed: true,
  headers: Headers { "content-type": "application/json" },
  ok: true,
  redirected: false,
  status: 200,
  statusText: "OK",
  url: 'data:application/json,{"67lang": "is fucking awesome"}'
} { "67lang": "is fucking awesome" }