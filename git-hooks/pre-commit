#!/usr/bin/env python3
"""
pre-commit hook launcher - resolves repo path and calls actual hook logic via subprocess.
this avoids module import issues when git runs the hook from different contexts.
"""

import subprocess
import sys
from pathlib import Path

def main():
    # resolve absolute path of repository root by finding .git directory
    current_path = Path(__file__).resolve().parent
    
    # search up the directory tree for .git directory
    while current_path != current_path.parent:
        if (current_path / ".git").exists():
            repo_root = current_path
            break
        current_path = current_path.parent
    else:
        print("error: could not find repository root (.git directory)")
        return 1
    
    # call the actual pre-commit logic via subprocess with proper working directory
    script_path = repo_root / "run_pre_commit.py"
    
    if not script_path.exists():
        print(f"error: pre-commit script not found at {script_path}")
        return 1
    
    # run the actual pre-commit logic from the repo root directory
    result = subprocess.run(
        ["python3", str(script_path)],
        cwd=repo_root
    )
    
    return result.returncode

if __name__ == "__main__":
    sys.exit(main())